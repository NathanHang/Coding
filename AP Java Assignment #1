/*
For this project, you will create and implement two methods:
1. The first method will be called createDog() which will return a Dog object. It will also have no parameters. This method will simply create aa new Dog object that will have the following attributes
-age = 2
-breed = Boston Terrier
-name = Lucy
2. The second method will be called pythagoreanTheorem() while will return an int. It will have two int parameters a and b. This method will compute the Pythagorean theorem given a and b. Recall that the formula for computing the missing side is: c = sqrt(a^2 + b^2). In this case, you will be returning and calculating c. Example: pythagoreanTheorem(3, 4) -> 5

Hints:
1. There are two constructors in the Dog class. Which one do we call if we want to have our own custom name, age, and breed?
2. You might need to use a combination of Math.sqrt() and Math.pow() for the Pythagorean Theroem.
3. Make sure to explicitly cast your result in pythagoreanTheorem() to an int since math.sqrt() returns a double.
*/
import java.lang.Math.*;

class Dog{
    int age;
    String breed, name;
    public Dog(){
        int age = 0;
        String breed = "N/A", name = "N/A";
    }
    public Dog(int inputtedAge, String inputtedBreed, String inputtedName){
        age = inputtedAge;
        breed = inputtedBreed;
        name = inputtedName;
    }
}

class Unit2{
    public Dog createDog(){
        Dog d = new Dog(2, "Boston Terrier", "Lucy");
        return d;
    }
    public int pythagoreanTheorem(int a, int b){
        double trueResult = Math.sqrt(Math.pow(a,2) + Math.pow(b,2));
        return (int)trueResult;
    }
}

public class Main
{
    public static void main(String[] args) {
		Unit2 unit = new Unit2();
		unit.createDog();
		int result = unit.pythagoreanTheorem(3,4);
		System.out.println("The hypotenuse is: " + result);
	}
}
