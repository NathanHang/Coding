#include <iostream>
#include <vector>

using namespace std;

double ArrayMergerAndMedianFinder(vector<int> & nums1, vector<int> & nums2){
        vector<int> vec3 (nums1.size() + nums2.size(), 0);
        int ElementComparisonForVectorA = 0;
        int ElementComparisonForVectorB = 0;
        double Median = 0.0;
        for(int i = 0; i < vec3.size(); i++){
                if(ElementComparisonForVectorA == nums1.size() || ElementComparisonForVectorB == nums2.size()){
                        if(ElementComparisonForVectorA == nums1.size()){
                                vec3[i] = nums2[ElementComparisonForVectorB];
                                ElementComparisonForVectorB += 1;
                        }
                        else{
                                vec3[i] = nums1[ElementComparisonForVectorA];
                                ElementComparisonForVectorA += 1;
                        }
                }
                else{
                        if(nums1[ElementComparisonForVectorA] < nums2[ElementComparisonForVectorB]){
                                vec3[i] = nums1[ElementComparisonForVectorA];
                                ElementComparisonForVectorA += 1;
                        }
                        else{
                                vec3[i] = nums2[ElementComparisonForVectorB];
                                ElementComparisonForVectorB += 1;
                        }
                }
        }
        
        if(vec3.size() % 2 != 0){
            Median = vec3[vec3.size()/2];
        }
        else{
            Median = (vec3[vec3.size()/2] + vec3[vec3.size()/2 + 1])/2.0;
        }

        return Median;
}

int main(){
        vector<int> a {};
        vector<int> b {1, 4, 5, 6, 7, 8, 9, 10, 11, 14, 23, 25, 27, 29, 34};
        double median;

        median = ArrayMergerAndMedianFinder(a, b);
        cout << "Median of the Array: " << median << endl;

        return 0;
}
