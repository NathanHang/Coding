/*
The Matrix of the problem:
    1   2   3   4   5
1   0   0   1   0   0
2   1   0   0   0   0
3   0   1/2 0   0   0
4   0   0   0   0   0
5   0   1/2 0   1   1
Teacher's Hints:
-Nested For Loop to do the math
-Consider when the values converge, and print them out
-When the pages are converged, stop the program
*/
#include <iostream>
#include <vector>
#include <stdlib.h>

using namespace std;

int main()
{
    int dampingFactor = 0.85;
    
    vector<vector<double>> graph
    {
        {0.0, 0,0, 1.0, 0.0, 0.0},
        {1.0, 0.0, 0.0, 0.0, 0.0},
        {0.0, 0.5, 0.0, 0.0, 0.0},
        {0.0, 0.0, 0.0, 0.0, 0.0},
        {0.0, 0.5, 0.0, 1.0, 1.0}
    };
    int pi[] = {1, 1, 1, 1, 1};
    cout << "Matrix for Problem" << endl;
    for(int i = 0; i < graph.size(); i++){
        for(int j = 0; j < graph[i].size(); j++){
            cout << graph[i][j] << " ";
        }
        cout << endl;
    }
    cout << endl;
    cout << "Values of pi" << endl;
    for(int i = 0; i < sizeof(pi)/sizeof(pi[0]); i++){
        cout << pi[i] << " ";
    }
    
    return 0;
}
