//Linked List in C++.
#include <iostream>

using namespace std;

struct node{
    int data;
    node* next;
    node* previous;
};

node* head = nullptr;
node* tail = nullptr;

int size = 0;

void add_start(int val){
    node* allocator = new node();
    allocator->data = val;
    if(head == nullptr){
        head = tail = allocator;
    }
    else{
        allocator->next = head;
        head->previous = allocator;
    }
    head = allocator;
    size++;
}

void add_end(int num){ 
    node* allocator = new node();
    allocator->data = num;
    allocator->next = nullptr;
    if(head == nullptr){
        head = allocator;
    }
    else{
        tail->next = allocator;
        allocator->previous = tail;
    }
    tail = allocator;
    size++;
}

void remove_head(){
    node* temp;
    temp = head;
    head = head->next;
    delete temp;
    head->previous = nullptr;
}

void remove_end(){
    node* temp;
    temp = tail;
    tail = tail->previous;
    delete temp;
    tail->next = nullptr;
}

bool is_Empty(){
    return(head == nullptr);
}

int get_start(){
    return head->data;
}

int get_end(){
    return tail->data;
}

bool check(int input){
    for(node* i = head; i != nullptr; i=i->next){
        if(i->data == input){
            return true;
        }
    }
    return false;
} 

int main()
{
    int checker = 0;
    /* To create an existing linked list
    node* new_node = new node;
    new_node->data = 0;
    new_node->next = nullptr;
    head = tail = new_node;
    */
    
    add_start(5);
    add_end(3);
    add_start(2);
    
    cout << "Here is the list: " << endl;
    node* cursor = head;

    while(cursor){
        cout << cursor->data <<" ";
        cursor = cursor->next;
    }

    cout << "\nSize: " << size << endl << "Head: " << head->data << endl << "Tail: " << tail->data << endl;
    
    cursor = tail;
    
    cout << "Reversed List:" << endl;
    
    while(cursor){
        cout << cursor->data << " ";
        cursor = cursor->previous;
    }
    
    remove_head();
    
    while(cursor){
        cout << cursor->data <<" ";
        cursor = cursor->next;
    }
    
    /*
    cout << "Is the list empty?" << endl;
    if(is_Empty()){
        cout << "true" << endl;
    }
    else{
        cout << "false" << endl;
    }
    cout << "The beginning of the list:" << endl;
    cout << get_start() << endl;
    cout << "The end of the list:" << endl;
    cout << get_end() << endl;
    cout << "Check value if it exists: " << endl;
    cin >> checker;
    if(check(checker)){
        cout << "true" << endl;
    }
    else{
        cout << "false" << endl;
    }
    */
    
    
    return 0;
}
